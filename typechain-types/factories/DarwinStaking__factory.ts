/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { DarwinStaking, DarwinStakingInterface } from "../DarwinStaking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_darwin",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stakedDarwin",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Stake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "rewards",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "BASE_APR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "claimableDarwin",
    outputs: [
      {
        internalType: "uint256",
        name: "claimable",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "darwin",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "lockBonusApr",
    outputs: [
      {
        internalType: "uint256",
        name: "bonus",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_lockPeriod",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakedDarwin",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "claimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastStakeTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockEnd",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610afa380380610afa83398101604081905261002f91610081565b6001600081905580546001600160a01b039384166001600160a01b031991821617909155600280549290931691161790556100b4565b80516001600160a01b038116811461007c57600080fd5b919050565b6000806040838503121561009457600080fd5b61009d83610065565b91506100ab60208401610065565b90509250929050565b610a37806100c36000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80634233531e1161005b5780634233531e1461014a5780637b0472f01461015d5780638ce910a514610170578063e4fd18c91461018357600080fd5b80631959a0021461008d5780631b04390b146100e95780632e1a7d4d1461010a5780633110c7921461011f575b600080fd5b6100c461009b3660046108d5565b600360208190526000918252604090912080546001820154600283015492909301549092919084565b6040805194855260208501939093529183015260608201526080015b60405180910390f35b6100fc6100f73660046108d5565b610192565b6040519081526020016100e0565b61011d610118366004610905565b6101f2565b005b600154610132906001600160a01b031681565b6040516001600160a01b0390911681526020016100e0565b600254610132906001600160a01b031681565b61011d61016b36600461091e565b6104b9565b6100fc61017e3660046108d5565b6106c4565b6100fc676124fee993bc000081565b6001600160a01b038116600090815260036020526040812060020154676124fee993bc0000906301e1338081116101c957806101cf565b6301e133805b90506301e133806101e08284610956565b6101ea9190610975565b949350505050565b6101fa6107dd565b6000610204610836565b9050811561047c57336000908152600360208190526040909120015442101561026c5760405162461bcd60e51b815260206004820152601560248201527411185c9dda5b94dd185ada5b99ce881313d0d2d151605a1b60448201526064015b60405180910390fd5b6002546040516370a0823160e01b81523360048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156102b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d89190610997565b8211156103315760405162461bcd60e51b815260206004820152602160248201527f44617277696e5374616b696e673a204e4f545f454e4f5547485f7344415257496044820152602760f91b6064820152608401610263565b600254604051632770a7eb60e21b8152336004820152602481018490526001600160a01b0390911690639dc29fac90604401600060405180830381600087803b15801561037d57600080fd5b505af1158015610391573d6000803e3d6000fd5b50503360008181526003602052604080822060020191909155600154905163a9059cbb60e01b81526004810192909252602482018690526001600160a01b0316925063a9059cbb91506044016020604051808303816000875af11580156103fc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042091906109b0565b61047c5760405162461bcd60e51b815260206004820152602760248201527f44617277696e5374616b696e673a2057495448445241575f5452414e5346455260448201526617d1905253115160ca1b6064820152608401610263565b6040518190839033907ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b56890600090a4506104b66001600055565b50565b6104c16107dd565b6001546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610518573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053c91906109b0565b6105885760405162461bcd60e51b815260206004820152601b60248201527f44617277696e5374616b696e673a205354414b455f4641494c454400000000006044820152606401610263565b610590610836565b503360009081526003602081905260408220828155426001820155015490036105d6576105bd81426109d2565b33600090815260036020819052604090912001556105fe565b33600090815260036020819052604082200180548392906105f89084906109d2565b90915550505b33600090815260036020526040812060020180548392906106209084906109d2565b90915550506002546040516340c10f1960e01b8152336004820152602481018490526001600160a01b03909116906340c10f1990604401600060405180830381600087803b15801561067157600080fd5b505af1158015610685573d6000803e3d6000fd5b50506040518492503391507febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a90600090a36106c06001600055565b5050565b6002546040516370a0823160e01b81526001600160a01b03838116600483015260009283929116906370a0823190602401602060405180830381865afa158015610712573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107369190610997565b9050806000036107495750600092915050565b6001600160a01b03831660009081526003602052604081208054600190910154909161077582426109ea565b90508261078f6301e1338068056bc75e2d63100000610956565b8261079989610192565b6107ab90676124fee993bc00006109d2565b6107b59088610956565b6107bf9190610956565b6107c99190610975565b6107d391906109ea565b9695505050505050565b60026000540361082f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610263565b6002600055565b6000610841336106c4565b905080156108d25733600090815260036020526040812080548392906108689084906109d2565b90915550506001546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b1580156108b957600080fd5b505af11580156108cd573d6000803e3d6000fd5b505050505b90565b6000602082840312156108e757600080fd5b81356001600160a01b03811681146108fe57600080fd5b9392505050565b60006020828403121561091757600080fd5b5035919050565b6000806040838503121561093157600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561097057610970610940565b500290565b60008261099257634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156109a957600080fd5b5051919050565b6000602082840312156109c257600080fd5b815180151581146108fe57600080fd5b600082198211156109e5576109e5610940565b500190565b6000828210156109fc576109fc610940565b50039056fea2646970667358221220c14915579fd56a355c0ed09f5e01b564fd7d4bf7332780af8c0679d25d8c726c64736f6c634300080e0033";

type DarwinStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DarwinStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DarwinStaking__factory extends ContractFactory {
  constructor(...args: DarwinStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _darwin: PromiseOrValue<string>,
    _stakedDarwin: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DarwinStaking> {
    return super.deploy(
      _darwin,
      _stakedDarwin,
      overrides || {}
    ) as Promise<DarwinStaking>;
  }
  override getDeployTransaction(
    _darwin: PromiseOrValue<string>,
    _stakedDarwin: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_darwin, _stakedDarwin, overrides || {});
  }
  override attach(address: string): DarwinStaking {
    return super.attach(address) as DarwinStaking;
  }
  override connect(signer: Signer): DarwinStaking__factory {
    return super.connect(signer) as DarwinStaking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DarwinStakingInterface {
    return new utils.Interface(_abi) as DarwinStakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DarwinStaking {
    return new Contract(address, _abi, signerOrProvider) as DarwinStaking;
  }
}

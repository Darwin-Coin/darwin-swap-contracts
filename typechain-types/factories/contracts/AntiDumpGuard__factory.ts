/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  AntiDumpGuard,
  AntiDumpGuardInterface,
} from "../../contracts/AntiDumpGuard";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "tokenSold",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenBought",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountSold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountBought",
        type: "uint256",
      },
    ],
    name: "BuyBackAndPair",
    type: "event",
  },
  {
    inputs: [],
    name: "USD",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sellToken",
        type: "address",
      },
    ],
    name: "buyBackAndPair",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "contract IDarwinSwapFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pair",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lister",
    outputs: [
      {
        internalType: "contract IDarwinSwapLister",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pair",
    outputs: [
      {
        internalType: "contract IDarwinSwapPair",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "contract IDarwinSwapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token0",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token1",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50336080526080516116a161005a60003960008181610144015281816101f3015281816102970152818161033f015281816103e7015281816106c9015261073301526116a16000f3fe60806040526004361061008a5760003560e01c8063c45a015511610059578063c45a015514610132578063c4d66de814610166578063d21220a714610188578063d3366388146101a8578063f887ea40146101c857600080fd5b80630dfe1681146100965780631bf6c21b146100d25780632cdc1c74146100f2578063a8aa1b311461011257600080fd5b3661009157005b600080fd5b3480156100a257600080fd5b506003546100b6906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b3480156100de57600080fd5b506005546100b6906001600160a01b031681565b3480156100fe57600080fd5b506002546100b6906001600160a01b031681565b34801561011e57600080fd5b506000546100b6906001600160a01b031681565b34801561013e57600080fd5b506100b67f000000000000000000000000000000000000000000000000000000000000000081565b34801561017257600080fd5b506101866101813660046111ce565b6101e8565b005b34801561019457600080fd5b506004546100b6906001600160a01b031681565b3480156101b457600080fd5b506101866101c33660046111ce565b61058e565b3480156101d457600080fd5b506001546100b6906001600160a01b031681565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461026f5760405162461bcd60e51b815260206004820152602160248201527f416e746944756d7047756172643a2043414c4c45525f4e4f545f464143544f526044820152605960f81b60648201526084015b60405180910390fd5b806000806101000a8154816001600160a01b0302191690836001600160a01b031602179055507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f887ea406040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103179190611202565b600160006101000a8154816001600160a01b0302191690836001600160a01b031602179055507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632cdc1c746040518163ffffffff1660e01b8152600401602060405180830381865afa15801561039b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bf9190611202565b600260006101000a8154816001600160a01b0302191690836001600160a01b031602179055507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631bf6c21b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610443573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104679190611202565b600580546001600160a01b0319166001600160a01b0392831617905560005460408051630dfe168160e01b815290519190921691630dfe16819160048083019260209291908290030181865afa1580156104c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e99190611202565b600380546001600160a01b0319166001600160a01b039283161790556000546040805163d21220a760e01b81529051919092169163d21220a79160048083019260209291908290030181865afa158015610547573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056b9190611202565b600480546001600160a01b0319166001600160a01b039290921691909117905550565b60025460405163f5dab71160e01b81526001600160a01b038381166004830152600092169063f5dab71190602401600060405180830381865afa1580156105d9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106019190810190611463565b9050806101000151600003610614575050565b6003546000906001600160a01b0384811691161461063d576003546001600160a01b031661064a565b6004546001600160a01b03165b6040516370a0823160e01b81523060048201529091506001600160a01b038216906370a0823190602401602060405180830381865afa158015610691573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b5919061156f565b6000036106c157505050565b6000806106ef7f00000000000000000000000000000000000000000000000000000000000000008685610e07565b915091506000610708670de0b6b3a76400008484610ebf565b610100860151600554919250906001600160a01b0386811691161461079e57600554600090610762907f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b031688610e07565b509050600061077a670de0b6b3a76400008387610ebf565b9050670de0b6b3a764000061078f828561159e565b61079991906115bd565b925050505b8082106107ae5750505050505050565b6000826107bc83600361159e565b6107c691906115df565b846107d1878561159e565b6107db91906115f7565b6107e585856115df565b6107ef919061159e565b6107f991906115bd565b905061080681600261159e565b6040516370a0823160e01b81523060048201526001600160a01b038816906370a0823190602401602060405180830381865afa15801561084a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086e919061156f565b10156108ec576040516370a0823160e01b81523060048201526002906001600160a01b038816906370a0823190602401602060405180830381865afa1580156108bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108df919061156f565b6108e991906115bd565b90505b600154604051636eb1769f60e11b81523060048201526001600160a01b039182166024820152600019918a169063dd62ed3e90604401602060405180830381865afa15801561093f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610963919061156f565b14610b4d5760015460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529089169063095ea7b3906044016020604051808303816000875af11580156109bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e0919061160e565b5060015460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529087169063095ea7b3906044016020604051808303816000875af1158015610a35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a59919061160e565b5060005460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529089169063095ea7b3906044016020604051808303816000875af1158015610aae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad2919061160e565b5060005460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529087169063095ea7b3906044016020604051808303816000875af1158015610b27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4b919061160e565b505b6040516370a0823160e01b81523060048201526000906001600160a01b038a16906370a0823190602401602060405180830381865afa158015610b94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb8919061156f565b60005460405163a87db92360e01b81526001600160a01b038a811660048301526024820186905292935091169063a87db92390604401600060405180830381600087803b158015610c0857600080fd5b505af1158015610c1c573d6000803e3d6000fd5b50506040516370a0823160e01b81523060048201528392506001600160a01b038c1691506370a0823190602401602060405180830381865afa158015610c66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8a919061156f565b610c9491906115f7565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038916906370a0823190602401602060405180830381865afa158015610cde573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d02919061156f565b6001549091506001600160a01b0316639d6fdd938b8a85858811610d265787610d28565b855b610d34426102586115df565b6040516001600160e01b031960e088901b1681526001600160a01b03958616600482015294909316602485015260448401919091526064830152608482015260a401600060405180830381600087803b158015610d9057600080fd5b505af1158015610da4573d6000803e3d6000fd5b5050604080516001600160a01b03808d1682528e166020820152908101869052606081018590527fd76c14b65d892518c063a34134624fca1ed5d6108e326bd744fd7e29e2ccd75d9250608001905060405180910390a150505050505050505050565b6000806000610e168585610faa565b509050600080610e278888886110a2565b6001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610e64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e889190611629565b5091509150826001600160a01b0316876001600160a01b031614610ead578082610eb0565b81815b90999098509650505050505050565b6000808411610f1f5760405162461bcd60e51b815260206004820152602660248201527f44617277696e537761704c6962726172793a20494e53554646494349454e545f604482015265105353d5539560d21b6064820152608401610266565b600083118015610f2f5750600082115b610f8d5760405162461bcd60e51b815260206004820152602960248201527f44617277696e537761704c6962726172793a20494e53554646494349454e545f6044820152684c495155494449545960b81b6064820152608401610266565b82610f98838661159e565b610fa291906115bd565b949350505050565b600080826001600160a01b0316846001600160a01b03160361101d5760405162461bcd60e51b815260206004820152602660248201527f44617277696e537761704c6962726172793a204944454e544943414c5f41444460448201526552455353455360d01b6064820152608401610266565b826001600160a01b0316846001600160a01b03161061103d578284611040565b83835b90925090506001600160a01b03821661109b5760405162461bcd60e51b815260206004820152601f60248201527f44617277696e537761704c6962726172793a205a45524f5f41444452455353006044820152606401610266565b9250929050565b60008060006110b18585610faa565b6040516bffffffffffffffffffffffff19606084811b8216602084015283901b1660348201529193509150869060480160405160208183030381529060405280519060200120876001600160a01b031663257671f56040518163ffffffff1660e01b8152600401602060405180830381865afa158015611135573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611159919061156f565b6040516001600160f81b0319602082015260609390931b6bffffffffffffffffffffffff191660218401526035830191909152605582015260750160408051601f1981840301815291905280516020909101209695505050505050565b6001600160a01b03811681146111cb57600080fd5b50565b6000602082840312156111e057600080fd5b81356111eb816111b6565b9392505050565b80516111fd816111b6565b919050565b60006020828403121561121457600080fd5b81516111eb816111b6565b634e487b7160e01b600052604160045260246000fd5b6040516101c0810167ffffffffffffffff811182821017156112595761125961121f565b60405290565b604051610140810167ffffffffffffffff811182821017156112595761125961121f565b604051601f8201601f1916810167ffffffffffffffff811182821017156112ac576112ac61121f565b604052919050565b6000604082840312156112c657600080fd5b6040516040810181811067ffffffffffffffff821117156112e9576112e961121f565b604052825181526020928301519281019290925250919050565b60006101c0828403121561131657600080fd5b61131e611235565b9050815181526020820151602082015260408201516040820152606082015160608201526080820151608082015260a082015160a082015260c082015160c082015260e082015160e08201526101008083015181830152506101208083015181830152506101408083015181830152506101608083015181830152506101808083015181830152506101a080830151818301525092915050565b8051600481106111fd57600080fd5b805180151581146111fd57600080fd5b600082601f8301126113e857600080fd5b815167ffffffffffffffff8111156114025761140261121f565b6020611416601f8301601f19168201611283565b828152858284870101111561142a57600080fd5b60005b8381101561144857858101830151828201840152820161142d565b838111156114595760008385840101525b5095945050505050565b60006020828403121561147557600080fd5b815167ffffffffffffffff8082111561148d57600080fd5b9083019061030082860312156114a257600080fd5b6114aa61125f565b6114b486846112b4565b81526114c38660408501611303565b60208201526114d561020084016113b8565b60408201526114e761022084016111f2565b60608201526114f961024084016111f2565b608082015261150b61026084016111f2565b60a082015261151d61028084016113c7565b60c082015261152f6102a084016113c7565b60e08201526102c08301516101008201526102e08301518281111561155357600080fd5b61155f878286016113d7565b6101208301525095945050505050565b60006020828403121561158157600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156115b8576115b8611588565b500290565b6000826115da57634e487b7160e01b600052601260045260246000fd5b500490565b600082198211156115f2576115f2611588565b500190565b60008282101561160957611609611588565b500390565b60006020828403121561162057600080fd5b6111eb826113c7565b60008060006060848603121561163e57600080fd5b8351925060208401519150604084015163ffffffff8116811461166057600080fd5b80915050925092509256fea2646970667358221220182627f508d37125e1b03bf935c264b7f9e629f758ab3c2a4bdf6f3207bdb2fd64736f6c634300080e0033";

type AntiDumpGuardConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AntiDumpGuardConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AntiDumpGuard__factory extends ContractFactory {
  constructor(...args: AntiDumpGuardConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AntiDumpGuard> {
    return super.deploy(overrides || {}) as Promise<AntiDumpGuard>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AntiDumpGuard {
    return super.attach(address) as AntiDumpGuard;
  }
  override connect(signer: Signer): AntiDumpGuard__factory {
    return super.connect(signer) as AntiDumpGuard__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AntiDumpGuardInterface {
    return new utils.Interface(_abi) as AntiDumpGuardInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AntiDumpGuard {
    return new Contract(address, _abi, signerOrProvider) as AntiDumpGuard;
  }
}

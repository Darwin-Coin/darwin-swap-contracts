/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  AntiDumpGuard,
  AntiDumpGuardInterface,
} from "../../contracts/AntiDumpGuard";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "tokenSold",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "tokenBought",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountSold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountBought",
        type: "uint256",
      },
    ],
    name: "BuyBackAndPair",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_sellToken",
        type: "address",
      },
    ],
    name: "buyBackAndPair",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dev",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "contract IDarwinSwapFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token1",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lister",
    outputs: [
      {
        internalType: "contract IDarwinSwapLister",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pair",
    outputs: [
      {
        internalType: "contract IDarwinSwapPair",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "contract IDarwinSwapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token0",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token1",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b503360805260805161115d61004c60003960008181610166015281816101f3015281816102970152818161033f01526103e7015261115d6000f3fe60806040526004361061008a5760003560e01c8063c0c53b8b11610059578063c0c53b8b14610132578063c45a015514610154578063d21220a714610188578063d3366388146101a8578063f887ea40146101c857600080fd5b80630dfe1681146100965780632cdc1c74146100d257806391cca3db146100f2578063a8aa1b311461011257600080fd5b3661009157005b600080fd5b3480156100a257600080fd5b506004546100b6906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b3480156100de57600080fd5b506002546100b6906001600160a01b031681565b3480156100fe57600080fd5b506003546100b6906001600160a01b031681565b34801561011e57600080fd5b506000546100b6906001600160a01b031681565b34801561013e57600080fd5b5061015261014d366004610ccb565b6101e8565b005b34801561016057600080fd5b506100b67f000000000000000000000000000000000000000000000000000000000000000081565b34801561019457600080fd5b506005546100b6906001600160a01b031681565b3480156101b457600080fd5b506101526101c3366004610d16565b610686565b3480156101d457600080fd5b506001546100b6906001600160a01b031681565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461026f5760405162461bcd60e51b815260206004820152602160248201527f416e746944756d7047756172643a2043414c4c45525f4e4f545f464143544f526044820152605960f81b60648201526084015b60405180910390fd5b826000806101000a8154816001600160a01b0302191690836001600160a01b031602179055507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f887ea406040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103179190610d4a565b600160006101000a8154816001600160a01b0302191690836001600160a01b031602179055507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632cdc1c746040518163ffffffff1660e01b8152600401602060405180830381865afa15801561039b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bf9190610d4a565b600260006101000a8154816001600160a01b0302191690836001600160a01b031602179055507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166391cca3db6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610443573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104679190610d4a565b600380546001600160a01b03199081166001600160a01b03938416179091556004805482168584169081178255600580549093168585161790925560015460405163095ea7b360e01b815293169083015260001960248301529063095ea7b3906044016020604051808303816000875af11580156104e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050d9190610d77565b5060055460015460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015610564573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105889190610d77565b506004805460005460405163095ea7b360e01b81526001600160a01b03918216938101939093526000196024840152169063095ea7b3906044016020604051808303816000875af11580156105e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106059190610d77565b5060055460005460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801561065c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106809190610d77565b50505050565b6003546001600160a01b031633148061072b57506002546004805460405163f5dab71160e01b81526001600160a01b03918216928101929092529091169063f5dab71190602401600060405180830381865afa1580156106ea573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107129190810190610fc6565b608001516001600160a01b0316336001600160a01b0316145b806107be575060025460055460405163f5dab71160e01b81526001600160a01b03918216600482015291169063f5dab71190602401600060405180830381865afa15801561077d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107a59190810190610fc6565b608001516001600160a01b0316336001600160a01b0316145b61081e5760405162461bcd60e51b815260206004820152602b60248201527f416e746944756d7047756172643a2043414c4c45525f4e4f545f544f4b454e5f60448201526a2a22a0a6afa7a92fa222ab60a91b6064820152608401610266565b6005546000906001600160a01b03838116911614610847576005546001600160a01b0316610854565b6004546001600160a01b03165b6040516370a0823160e01b81523060048201529091506001600160a01b038216906370a0823190602401602060405180830381865afa15801561089b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108bf91906110c6565b600003610946576040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa15801561090a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092e91906110c6565b600003610939575050565b61094281610686565b5050565b60025460405163f5dab71160e01b81526001600160a01b038481166004830152600092169063f5dab71190602401600060405180830381865afa158015610991573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109b99190810190610fc6565b60208101516101a081015161018082015161016083015161014090930151939450909290916109e7916110df565b6109f191906110df565b6109fb91906110df565b600003610a0757505050565b6000546040516370a0823160e01b81523060048201526001600160a01b039182169163a87db923918591600291908316906370a0823190602401602060405180830381865afa158015610a5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8291906110c6565b610a8c9190611105565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b158015610ad257600080fd5b505af1158015610ae6573d6000803e3d6000fd5b50506040516370a0823160e01b8152306004820152600092506001600160a01b03861691506370a0823190602401602060405180830381865afa158015610b31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5591906110c6565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038516906370a0823190602401602060405180830381865afa158015610b9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc391906110c6565b6001549091506001600160a01b0316639d6fdd9386868585610be7426102586110df565b6040516001600160e01b031960e088901b1681526001600160a01b03958616600482015294909316602485015260448401919091526064830152608482015260a401600060405180830381600087803b158015610c4357600080fd5b505af1158015610c57573d6000803e3d6000fd5b5050604080516001600160a01b03808916825289166020820152908101849052606081018590527fd76c14b65d892518c063a34134624fca1ed5d6108e326bd744fd7e29e2ccd75d9250608001905060405180910390a1505050505b50565b6001600160a01b0381168114610cb357600080fd5b600080600060608486031215610ce057600080fd5b8335610ceb81610cb6565b92506020840135610cfb81610cb6565b91506040840135610d0b81610cb6565b809150509250925092565b600060208284031215610d2857600080fd5b8135610d3381610cb6565b9392505050565b8051610d4581610cb6565b919050565b600060208284031215610d5c57600080fd5b8151610d3381610cb6565b80518015158114610d4557600080fd5b600060208284031215610d8957600080fd5b610d3382610d67565b634e487b7160e01b600052604160045260246000fd5b6040516101c0810167ffffffffffffffff81118282101715610dcc57610dcc610d92565b60405290565b604051610120810167ffffffffffffffff81118282101715610dcc57610dcc610d92565b604051601f8201601f1916810167ffffffffffffffff81118282101715610e1f57610e1f610d92565b604052919050565b600060408284031215610e3957600080fd5b6040516040810181811067ffffffffffffffff82111715610e5c57610e5c610d92565b604052825181526020928301519281019290925250919050565b60006101c08284031215610e8957600080fd5b610e91610da8565b9050815181526020820151602082015260408201516040820152606082015160608201526080820151608082015260a082015160a082015260c082015160c082015260e082015160e08201526101008083015181830152506101208083015181830152506101408083015181830152506101608083015181830152506101808083015181830152506101a080830151818301525092915050565b805160038110610d4557600080fd5b600082601f830112610f4b57600080fd5b815167ffffffffffffffff811115610f6557610f65610d92565b6020610f79601f8301601f19168201610df6565b8281528582848701011115610f8d57600080fd5b60005b83811015610fab578581018301518282018401528201610f90565b83811115610fbc5760008385840101525b5095945050505050565b600060208284031215610fd857600080fd5b815167ffffffffffffffff80821115610ff057600080fd5b908301906102e0828603121561100557600080fd5b61100d610dd2565b6110178684610e27565b81526110268660408501610e76565b60208201526110386102008401610f2b565b604082015261104a6102208401610d3a565b606082015261105c6102408401610d3a565b608082015261106e6102608401610d3a565b60a08201526110806102808401610d67565b60c08201526110926102a08401610d67565b60e08201526102c0830151828111156110aa57600080fd5b6110b687828601610f3a565b6101008301525095945050505050565b6000602082840312156110d857600080fd5b5051919050565b6000821982111561110057634e487b7160e01b600052601160045260246000fd5b500190565b60008261112257634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212200ddad642ff80c71fc7b4fc29cee79b895a2ddf287ec95ed96770c4bc47db8bd664736f6c634300080e0033";

type AntiDumpGuardConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AntiDumpGuardConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AntiDumpGuard__factory extends ContractFactory {
  constructor(...args: AntiDumpGuardConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AntiDumpGuard> {
    return super.deploy(overrides || {}) as Promise<AntiDumpGuard>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AntiDumpGuard {
    return super.attach(address) as AntiDumpGuard;
  }
  override connect(signer: Signer): AntiDumpGuard__factory {
    return super.connect(signer) as AntiDumpGuard__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AntiDumpGuardInterface {
    return new utils.Interface(_abi) as AntiDumpGuardInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AntiDumpGuard {
    return new Contract(address, _abi, signerOrProvider) as AntiDumpGuard;
  }
}

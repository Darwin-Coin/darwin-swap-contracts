/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  DarwinSwapLister,
  DarwinSwapListerInterface,
} from "../../contracts/DarwinSwapLister";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "ownerAddress",
        type: "address",
      },
    ],
    name: "TokenBanned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "tokenTaxOnSell",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokenTaxOnBuy",
                type: "uint256",
              },
            ],
            internalType: "struct IDarwinSwapLister.OwnTokenomicsInfo",
            name: "ownToks",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "tokenA1TaxOnSell",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokenB1TaxOnSell",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokenA1TaxOnBuy",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokenB1TaxOnBuy",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokenA2TaxOnSell",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokenB2TaxOnSell",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokenA2TaxOnBuy",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokenB2TaxOnBuy",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "refundOnSell",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "refundOnBuy",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokenB1SellToADG",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokenB1BuyToADG",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokenB2SellToADG",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokenB2BuyToADG",
                type: "uint256",
              },
            ],
            internalType: "struct IDarwinSwapLister.TokenomicsInfo",
            name: "addedToks",
            type: "tuple",
          },
          {
            internalType: "enum IDarwinSwapLister.TokenStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "validator",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "feeReceiver",
            type: "address",
          },
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "official",
            type: "bool",
          },
          {
            internalType: "string",
            name: "purpose",
            type: "string",
          },
        ],
        indexed: true,
        internalType: "struct IDarwinSwapLister.TokenInfo",
        name: "listingInfo",
        type: "tuple",
      },
    ],
    name: "TokenListed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "createPair",
    outputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dev",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isUserBannedFromListing",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isValidator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "darwin",
        type: "address",
      },
      {
        internalType: "address",
        name: "weth",
        type: "address",
      },
      {
        internalType: "address",
        name: "darwinCommunity",
        type: "address",
      },
    ],
    name: "listDarwinWithWETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "listOfficialToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "tokenTaxOnSell",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokenTaxOnBuy",
                type: "uint256",
              },
            ],
            internalType: "struct IDarwinSwapLister.OwnTokenomicsInfo",
            name: "ownToks",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "tokenA1TaxOnSell",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokenB1TaxOnSell",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokenA1TaxOnBuy",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokenB1TaxOnBuy",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokenA2TaxOnSell",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokenB2TaxOnSell",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokenA2TaxOnBuy",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokenB2TaxOnBuy",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "refundOnSell",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "refundOnBuy",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokenB1SellToADG",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokenB1BuyToADG",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokenB2SellToADG",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokenB2BuyToADG",
                type: "uint256",
              },
            ],
            internalType: "struct IDarwinSwapLister.TokenomicsInfo",
            name: "addedToks",
            type: "tuple",
          },
          {
            internalType: "enum IDarwinSwapLister.TokenStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "validator",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "feeReceiver",
            type: "address",
          },
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "official",
            type: "bool",
          },
          {
            internalType: "string",
            name: "purpose",
            type: "string",
          },
        ],
        internalType: "struct IDarwinSwapLister.TokenInfo",
        name: "listingInfo",
        type: "tuple",
      },
    ],
    name: "listToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxTok1Tax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxTok2Tax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_ban",
        type: "bool",
      },
    ],
    name: "setBanToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_ban",
        type: "bool",
      },
    ],
    name: "setBanUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dev",
        type: "address",
      },
    ],
    name: "setDev",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
    ],
    name: "setFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxTok1Tax",
        type: "uint256",
      },
    ],
    name: "setMaxTok1Tax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxTok2Tax",
        type: "uint256",
      },
    ],
    name: "setMaxTok2Tax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isValidator",
        type: "bool",
      },
    ],
    name: "setValidator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "tokenInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "tokenTaxOnSell",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokenTaxOnBuy",
                type: "uint256",
              },
            ],
            internalType: "struct IDarwinSwapLister.OwnTokenomicsInfo",
            name: "ownToks",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "tokenA1TaxOnSell",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokenB1TaxOnSell",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokenA1TaxOnBuy",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokenB1TaxOnBuy",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokenA2TaxOnSell",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokenB2TaxOnSell",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokenA2TaxOnBuy",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokenB2TaxOnBuy",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "refundOnSell",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "refundOnBuy",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokenB1SellToADG",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokenB1BuyToADG",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokenB2SellToADG",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokenB2BuyToADG",
                type: "uint256",
              },
            ],
            internalType: "struct IDarwinSwapLister.TokenomicsInfo",
            name: "addedToks",
            type: "tuple",
          },
          {
            internalType: "enum IDarwinSwapLister.TokenStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "validator",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "feeReceiver",
            type: "address",
          },
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "official",
            type: "bool",
          },
          {
            internalType: "string",
            name: "purpose",
            type: "string",
          },
        ],
        internalType: "struct IDarwinSwapLister.TokenInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "validTokens",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "decimals",
            type: "uint256",
          },
        ],
        internalType: "struct IDarwinSwapLister.Token[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b0319163390811782558152600560205260409020805460ff191660011790556107d06002556103e86003556126c2806100566000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063ae5363da116100ad578063d477f05f11610071578063d477f05f1461024b578063d6e4b4dc1461025e578063f5dab71114610291578063facca62c146102b1578063facd743b146102c457600080fd5b8063ae5363da146101ea578063afcd025d146101fd578063c45a015514610210578063c9c6539614610223578063d24573701461023657600080fd5b80635bb47808116100f45780635bb47808146101735780638d9193ee1461018657806391cca3db14610199578063989da3ed146101c4578063a1c0aa0c146101d757600080fd5b8063089c2ae8146101265780632a93a4aa146101425780632d508c7f146101575780634623c91d14610160575b600080fd5b61012f60035481565b6040519081526020015b60405180910390f35b610155610150366004611ad8565b6102e7565b005b61012f60025481565b61015561016e366004611b0e565b61041e565b610155610181366004611ad8565b610473565b610155610194366004611b47565b6104bf565b6000546101ac906001600160a01b031681565b6040516001600160a01b039091168152602001610139565b6101556101d2366004611b92565b6106d5565b6101556101e5366004611b92565b610704565b6101556101f8366004611dd1565b610733565b61015561020b366004611b0e565b610f4a565b6001546101ac906001600160a01b031681565b6101ac610231366004611ee6565b610fa4565b61023e611175565b6040516101399190611f70565b610155610259366004611ad8565b611483565b61028161026c366004611ad8565b60066020526000908152604090205460ff1681565b6040519015158152602001610139565b6102a461029f366004611ad8565b6114cf565b60405161013991906120d9565b6101556102bf366004611b0e565b6116e0565b6102816102d2366004611ad8565b60056020526000908152604090205460ff1681565b3360009081526005602052604090205460ff1661031f5760405162461bcd60e51b815260040161031690612182565b60405180910390fd5b6001600160a01b038116600090815260046020526040812060108101805460016001600160a81b0319909116336101000217179055601201805461ffff60a01b191661010160a01b179055805b6007548110156103c857826001600160a01b031660078281548110610393576103936121b7565b6000918252602090912001546001600160a01b0316036103b657600191506103c8565b806103c0816121e3565b91505061036c565b508061041a57600780546001810182556000919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880180546001600160a01b0319166001600160a01b0384161790555b5050565b6000546001600160a01b031633146104485760405162461bcd60e51b8152600401610316906121fc565b6001600160a01b03919091166000908152600560205260409020805460ff1916911515919091179055565b6000546001600160a01b0316331461049d5760405162461bcd60e51b8152600401610316906121fc565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146104e95760405162461bcd60e51b8152600401610316906121fc565b6001600160a01b03838116600081815260046020819052604080832060fa600882018190556009820155601081018054610100339081026001600160a81b03199092169190911760019081179092556012830180546011850180546001600160a01b0319169093179092558989166001600160b01b03199092169190911761010160a01b1790556101f4600f9092019190915554905163e6a4390560e01b81529182019390935285841660248201529092919091169063e6a4390590604401602060405180830381865afa1580156105c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e99190612233565b90506001600160a01b038116610674576001546040516364e329cb60e11b81526001600160a01b03868116600483015285811660248301529091169063c9c65396906044016020604051808303816000875af115801561064d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106719190612233565b90505b6040516362c6744360e11b81526001600160a01b03828116600483015285169063c58ce88690602401600060405180830381600087803b1580156106b757600080fd5b505af11580156106cb573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146106ff5760405162461bcd60e51b8152600401610316906121fc565b600355565b6000546001600160a01b0316331461072e5760405162461bcd60e51b8152600401610316906121fc565b600255565b6001600160a01b0382166107895760405162461bcd60e51b815260206004820152601860248201527f44617277696e537761703a205a45524f5f4144445245535300000000000000006044820152606401610316565b600081610100015151116107df5760405162461bcd60e51b815260206004820152601960248201527f44617277696e537761703a20454d5054595f505552504f5345000000000000006044820152606401610316565b60026001600160a01b03831660009081526004602052604090206010015460ff166002811115610811576108116120a1565b1415801561082f57503360009081526006602052604090205460ff16155b61087b5760405162461bcd60e51b815260206004820152601b60248201527f44617277696e537761703a20544f4b454e5f4f525f42414e4e454400000000006044820152606401610316565b60006108868361187a565b9050336001600160a01b03821614806108ae57503360009081526005602052604090205460ff165b6109125760405162461bcd60e51b815260206004820152602f60248201527f44617277696e537761703a2043414c4c45525f4e4f545f544f4b454e5f4f574e60448201526e22a92fa7a92fab20a624a220aa27a960891b6064820152608401610316565b6001600160a01b03818116608084015260016040840181905260c0840152600060e084015260a083015116610948573360a08301525b6002546003546040516363f0381960e11b815260009273__$6a4709d1eab6e3f604fe8171dfdaaeb3a4$__9263c7e070329261098a9288929091600401612250565b602060405180830381865af41580156109a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109cb9190612312565b905080610a2b5760405162461bcd60e51b815260206004820152602860248201527f44617277696e537761703a20494e56414c49445f5245515545535445445f544f6044820152674b454e4f4d49435360c01b6064820152608401610316565b6020830151604051639acf9d7960e01b815273__$6a4709d1eab6e3f604fe8171dfdaaeb3a4$";

type DarwinSwapListerConstructorParams =
  | [linkLibraryAddresses: DarwinSwapListerLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DarwinSwapListerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class DarwinSwapLister__factory extends ContractFactory {
  constructor(...args: DarwinSwapListerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        DarwinSwapLister__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: DarwinSwapListerLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$6a4709d1eab6e3f604fe8171dfdaaeb3a4\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/Tokenomics2Library.sol:Tokenomics2Library"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DarwinSwapLister> {
    return super.deploy(overrides || {}) as Promise<DarwinSwapLister>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DarwinSwapLister {
    return super.attach(address) as DarwinSwapLister;
  }
  override connect(signer: Signer): DarwinSwapLister__factory {
    return super.connect(signer) as DarwinSwapLister__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DarwinSwapListerInterface {
    return new utils.Interface(_abi) as DarwinSwapListerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DarwinSwapLister {
    return new Contract(address, _abi, signerOrProvider) as DarwinSwapLister;
  }
}

export interface DarwinSwapListerLibraryAddresses {
  ["contracts/libraries/Tokenomics2Library.sol:Tokenomics2Library"]: string;
}

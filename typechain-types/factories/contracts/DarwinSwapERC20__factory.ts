/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  DarwinSwapERC20,
  DarwinSwapERC20Interface,
} from "../../contracts/DarwinSwapERC20";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604080518082018252600f81526e2230b93bb4b729bbb0b8102830b4b960891b6020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527f04c1d0b7fe2e236eeafcf5d4a85670f32c93c8edd289cc39d8b7ff661e5e2d84818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c09091019092528151910120600355610873806100f66000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80633644e5151161008c57806395d89b411161006657806395d89b41146101e9578063a9059cbb14610211578063d505accf14610224578063dd62ed3e1461023957600080fd5b80633644e515146101a057806370a08231146101a95780637ecebe00146101c957600080fd5b806306fdde03146100d4578063095ea7b31461011857806318160ddd1461013b57806323b872dd1461014c57806330adf81f1461015f578063313ce56714610186575b600080fd5b6101026040518060400160405280600f81526020016e2230b93bb4b729bbb0b8102830b4b960891b81525081565b60405161010f9190610640565b60405180910390f35b61012b6101263660046106b1565b610264565b604051901515815260200161010f565b60005b60405190815260200161010f565b61012b61015a3660046106db565b61027a565b61013e7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b61018e601281565b60405160ff909116815260200161010f565b61013e60035481565b61013e6101b7366004610717565b60016020526000908152604090205481565b61013e6101d7366004610717565b60046020526000908152604090205481565b61010260405180604001604052806009815260200168044415257494e2d4c560bc1b81525081565b61012b61021f3660046106b1565b61030f565b610237610232366004610739565b61031c565b005b61013e6102473660046107ac565b600260209081526000928352604080842090915290825290205481565b6000610271338484610536565b50600192915050565b6001600160a01b0383166000908152600260209081526040808320338452909152812054600019146102fa576001600160a01b03841660009081526002602090815260408083203384529091529020546102d59083906107f5565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b610305848484610598565b5060019392505050565b6000610271338484610598565b428410156103675760405162461bcd60e51b815260206004820152601360248201527211185c9dda5b94ddd85c0e8811561412549151606a1b60448201526064015b60405180910390fd5b6003546001600160a01b038816600090815260046020526040812080549192917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b9190876103ba8361080c565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e0016040516020818303038152906040528051906020012060405160200161043392919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa15801561049e573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906104d45750886001600160a01b0316816001600160a01b0316145b6105205760405162461bcd60e51b815260206004820152601d60248201527f44617277696e537761703a20494e56414c49445f5349474e4154555245000000604482015260640161035e565b61052b898989610536565b505050505050505050565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166000908152600160205260409020546105bc9082906107f5565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546105ec908290610825565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061058b9085815260200190565b600060208083528351808285015260005b8181101561066d57858101830151858201604001528201610651565b8181111561067f576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146106ac57600080fd5b919050565b600080604083850312156106c457600080fd5b6106cd83610695565b946020939093013593505050565b6000806000606084860312156106f057600080fd5b6106f984610695565b925061070760208501610695565b9150604084013590509250925092565b60006020828403121561072957600080fd5b61073282610695565b9392505050565b600080600080600080600060e0888a03121561075457600080fd5b61075d88610695565b965061076b60208901610695565b95506040880135945060608801359350608088013560ff8116811461078f57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156107bf57600080fd5b6107c883610695565b91506107d660208401610695565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600082821015610807576108076107df565b500390565b60006001820161081e5761081e6107df565b5060010190565b60008219821115610838576108386107df565b50019056fea2646970667358221220dde13afa6ac4bac880172d87d714bf2da26e1c784b4652cb236a5aaf7cb3209f64736f6c634300080e0033";

type DarwinSwapERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DarwinSwapERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DarwinSwapERC20__factory extends ContractFactory {
  constructor(...args: DarwinSwapERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DarwinSwapERC20> {
    return super.deploy(overrides || {}) as Promise<DarwinSwapERC20>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DarwinSwapERC20 {
    return super.attach(address) as DarwinSwapERC20;
  }
  override connect(signer: Signer): DarwinSwapERC20__factory {
    return super.connect(signer) as DarwinSwapERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DarwinSwapERC20Interface {
    return new utils.Interface(_abi) as DarwinSwapERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DarwinSwapERC20 {
    return new Contract(address, _abi, signerOrProvider) as DarwinSwapERC20;
  }
}

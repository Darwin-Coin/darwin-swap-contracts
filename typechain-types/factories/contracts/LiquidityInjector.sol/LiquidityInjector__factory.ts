/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  LiquidityInjector,
  LiquidityInjectorInterface,
} from "../../../contracts/LiquidityInjector.sol/LiquidityInjector";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "tokenSold",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "tokenBought",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountSold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountBought",
        type: "uint256",
      },
    ],
    name: "BuyBackAndPair",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_sellToken",
        type: "address",
      },
    ],
    name: "buyBackAndPair",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dev",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "contract IDarwinSwapFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token1",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lister",
    outputs: [
      {
        internalType: "contract IDarwinSwapLister",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pair",
    outputs: [
      {
        internalType: "contract IDarwinSwapPair",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "contract IDarwinSwapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token0",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token1",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b503360805260805161177f61004c600039600081816101b70152818161026b0152818161035f0152818161042e01526104fd015261177f6000f3fe60806040526004361061009a5760003560e01c8063c0c53b8b11610069578063d21220a71161004e578063d21220a7146101d9578063d336638814610206578063f887ea401461022657600080fd5b8063c0c53b8b14610183578063c45a0155146101a557600080fd5b80630dfe1681146100a65780632cdc1c74146100fc57806391cca3db14610129578063a8aa1b311461015657600080fd5b366100a157005b600080fd5b3480156100b257600080fd5b506004546100d39073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b34801561010857600080fd5b506002546100d39073ffffffffffffffffffffffffffffffffffffffff1681565b34801561013557600080fd5b506003546100d39073ffffffffffffffffffffffffffffffffffffffff1681565b34801561016257600080fd5b506000546100d39073ffffffffffffffffffffffffffffffffffffffff1681565b34801561018f57600080fd5b506101a361019e366004611259565b610253565b005b3480156101b157600080fd5b506100d37f000000000000000000000000000000000000000000000000000000000000000081565b3480156101e557600080fd5b506005546100d39073ffffffffffffffffffffffffffffffffffffffff1681565b34801561021257600080fd5b506101a36102213660046112a4565b6108d1565b34801561023257600080fd5b506001546100d39073ffffffffffffffffffffffffffffffffffffffff1681565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461031d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f4c6971756964697479496e6a6563746f723a2043414c4c45525f4e4f545f464160448201527f43544f525900000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663f887ea406040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ec91906112d8565b600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632cdc1c746040518163ffffffff1660e01b8152600401602060405180830381865afa158015610497573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104bb91906112d8565b600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166391cca3db6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610566573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058a91906112d8565b600380547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff93841617909155600480548216858416908117825560058054909316858516179092556001546040517f095ea7b30000000000000000000000000000000000000000000000000000000081529316908301527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60248301529063095ea7b3906044016020604051808303816000875af1158015610668573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068c9190611305565b506005546001546040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602482015291169063095ea7b3906044016020604051808303816000875af1158015610727573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074b9190611305565b50600480546000546040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff918216938101939093527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6024840152169063095ea7b3906044016020604051808303816000875af11580156107e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080c9190611305565b506005546000546040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602482015291169063095ea7b3906044016020604051808303816000875af11580156108a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cb9190611305565b50505050565b60035473ffffffffffffffffffffffffffffffffffffffff163314806109e15750600254600480546040517ff5dab71100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff918216928101929092529091169063f5dab71190602401600060405180830381865afa158015610968573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526109ae91908101906115a9565b6080015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b80610ad257506002546005546040517ff5dab71100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff918216600482015291169063f5dab71190602401600060405180830381865afa158015610a59573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610a9f91908101906115a9565b6080015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610b5e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f4c6971756964697479496e6a6563746f723a2043414c4c45525f4e4f545f544f60448201527f4b454e5f5445414d5f4f525f44455600000000000000000000000000000000006064820152608401610314565b478015610c5e57600154604080517fad5c4648000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff169163ad5c46489160048083019260209291908290030181865afa158015610bd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf991906112d8565b90508073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b158015610c4357600080fd5b505af1158015610c57573d6000803e3d6000fd5b5050505050505b60055460009073ffffffffffffffffffffffffffffffffffffffff848116911614610ca15760055473ffffffffffffffffffffffffffffffffffffffff16610cbb565b60045473ffffffffffffffffffffffffffffffffffffffff165b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290915073ffffffffffffffffffffffffffffffffffffffff8216906370a0823190602401602060405180830381865afa158015610d28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4c91906116b6565b600003610df8576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015610dc0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de491906116b6565b1115610df357610df3816108d1565b505050565b6002546040517ff5dab71100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152600092169063f5dab71190602401600060405180830381865afa158015610e69573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610eaf91908101906115a9565b6000546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015291925073ffffffffffffffffffffffffffffffffffffffff9081169163a87db9239185916002918316906370a0823190602401602060405180830381865afa158015610f2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5291906116b6565b610f5c91906116cf565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff90921660048301526024820152604401600060405180830381600087803b158015610fc757600080fd5b505af1158015610fdb573d6000803e3d6000fd5b50506040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000925073ffffffffffffffffffffffffffffffffffffffff871691506370a0823190602401602060405180830381865afa15801561104c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061107091906116b6565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290915060009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa1580156110e0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110491906116b6565b60015490915073ffffffffffffffffffffffffffffffffffffffff16639d6fdd93878685856111354261025861170a565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e088901b16815273ffffffffffffffffffffffffffffffffffffffff958616600482015294909316602485015260448401919091526064830152608482015260a401600060405180830381600087803b1580156111b657600080fd5b505af11580156111ca573d6000803e3d6000fd5b50506040805173ffffffffffffffffffffffffffffffffffffffff80891682528a166020820152908101849052606081018590527fd76c14b65d892518c063a34134624fca1ed5d6108e326bd744fd7e29e2ccd75d9250608001905060405180910390a150505050505b50565b73ffffffffffffffffffffffffffffffffffffffff8116811461123457600080fd5b60008060006060848603121561126e57600080fd5b833561127981611237565b9250602084013561128981611237565b9150604084013561129981611237565b809150509250925092565b6000602082840312156112b657600080fd5b81356112c181611237565b9392505050565b80516112d381611237565b919050565b6000602082840312156112ea57600080fd5b81516112c181611237565b805180151581146112d357600080fd5b60006020828403121561131757600080fd5b6112c1826112f5565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516101c0810167ffffffffffffffff8111828210171561137357611373611320565b60405290565b604051610140810167ffffffffffffffff8111828210171561137357611373611320565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156113e4576113e4611320565b604052919050565b6000604082840312156113fe57600080fd5b6040516040810181811067ffffffffffffffff8211171561142157611421611320565b604052825181526020928301519281019290925250919050565b60006101c0828403121561144e57600080fd5b61145661134f565b9050815181526020820151602082015260408201516040820152606082015160608201526080820151608082015260a082015160a082015260c082015160c082015260e082015160e08201526101008083015181830152506101208083015181830152506101408083015181830152506101608083015181830152506101808083015181830152506101a080830151818301525092915050565b8051600381106112d357600080fd5b600082601f83011261151057600080fd5b815167ffffffffffffffff81111561152a5761152a611320565b602061155c817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8501160161139d565b828152858284870101111561157057600080fd5b60005b8381101561158e578581018301518282018401528201611573565b8381111561159f5760008385840101525b5095945050505050565b6000602082840312156115bb57600080fd5b815167ffffffffffffffff808211156115d357600080fd5b9083019061030082860312156115e857600080fd5b6115f0611379565b6115fa86846113ec565b8152611609866040850161143b565b602082015261161b61020084016114f0565b604082015261162d61022084016112c8565b606082015261163f61024084016112c8565b608082015261165161026084016112c8565b60a082015261166361028084016112f5565b60c08201526116756102a084016112f5565b60e08201526102c08301518281111561168d57600080fd5b611699878286016114ff565b610100830152506102e09290920151610120830152509392505050565b6000602082840312156116c857600080fd5b5051919050565b600082611705577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b60008219821115611744577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b50019056fea264697066735822122058a508607a06d40c1a10bca20c577a5022eb09783a4e6970ed5a2dfd17b0789364736f6c634300080e0033";

type LiquidityInjectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LiquidityInjectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LiquidityInjector__factory extends ContractFactory {
  constructor(...args: LiquidityInjectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LiquidityInjector> {
    return super.deploy(overrides || {}) as Promise<LiquidityInjector>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LiquidityInjector {
    return super.attach(address) as LiquidityInjector;
  }
  override connect(signer: Signer): LiquidityInjector__factory {
    return super.connect(signer) as LiquidityInjector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LiquidityInjectorInterface {
    return new utils.Interface(_abi) as LiquidityInjectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LiquidityInjector {
    return new Contract(address, _abi, signerOrProvider) as LiquidityInjector;
  }
}
